{"version":3,"sources":["SudokuItem/index.tsx","Puzzles/index.ts","Modal/index.tsx","SolvedModal/index.tsx","ChooseSettingsModal/index.tsx","Sudoku/index.tsx","App.tsx","index.tsx"],"names":["SudokuItem","item","changeSudokuItem","coordinates","isMistake","componentStyle","permanent","type","className","value","onChange","e","target","length","newDigitIndex","indexOf","newValue","parseInt","isNaN","disabled","puzzles","easy","intermediate","hard","Modal","open","children","modalStyles","overlayStyles","SolvedModal","restartGame","Button","variant","onClick","ChooseSettingsModal","applySettings","useState","temporaryDifficulty","setTemporaryDifficulty","temporaryShowMistakes","setTemporaryShowMistakes","FormControl","component","RadioGroup","name","FormControlLabel","control","Radio","label","Switch","size","checked","Sudoku","board","setBoard","mistakes","setMistakes","solved","setSolved","difficulty","setDifficulty","showMistakes","setShowMistakes","useEffect","getBoard","newBoard","newMistakes","puzzle","Math","floor","random","i","row","mistakesRow","j","isPermanent","push","x","y","forEach","checkSudokuForErrors","checkGroup","group","newBoardSolved","Set","map","elements","filter","el","temporaryMistakes","allFieldFilled","mistakeRow","column","yStart","xStart","square","mistake","yIndex","xIndex","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4584b86.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react';\n\nimport './style.css';\n\ninterface SudokuItemProps {\n  item: SudokuItemType;\n  changeSudokuItem: ChangeItem;\n  coordinates: Coordinates;\n  isMistake: boolean;\n}\n\nexport const SudokuItem: React.FC<SudokuItemProps> = ({\n  item,\n  changeSudokuItem,\n  coordinates,\n  isMistake,\n}) => {\n  const changeItemValue = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.length === 0) {\n      changeSudokuItem(coordinates, 0);\n    }\n\n    const newDigitIndex = e.target.value.indexOf('' + item.value) === 0 ? 1 : 0;\n    const newValue = parseInt(e.target.value[newDigitIndex]);\n\n    if (!isNaN(newValue)) {\n      changeSudokuItem(coordinates, newValue);\n    }\n  };\n\n  const mainInputStyle = item.permanent ? 'item item-permanent' : 'item';\n  const mistakeInputStyle = isMistake ? 'item-mistake' : '';\n  const componentStyle = mainInputStyle + ' ' + mistakeInputStyle;\n\n  return (\n    <input\n      type=\"text\"\n      className={componentStyle}\n      value={item.value !== 0 ? item.value : ''}\n      onChange={changeItemValue}\n      disabled={item.permanent}\n    />\n  );\n};\n","export const puzzles: Puzzles = {\n  easy: [\n    '017386954356194728489257136165948273872563419943712685521439867798625341634871592',\n    '104052000230000006060000010600900400000000000903406002000175009071004030090000020',\n    '000000070001900500000020186800510003309060051600070000700000910280000000003000000',\n    '000700310001004000007010000000500060010000500060078904400000079000060050080003006',\n    '090000200780004010001200000000007100020100534000090000078000390004000081050000007',\n    '000040020000000080708000000000796500500000030060025009670002093325009000800000004',\n    '500000200000007005000800600010569000000000020080070409006900014001005890020040000',\n    '000060800000002704000090020900027568000000200500000007070008190002601000805049002',\n    '000702050090840700000000804000410005000300000014005309080100400020907008000000210',\n    '300000100010000257000000000004000016056000008802040300200710040000000000005608000',\n    '000800060026700001007040008003000200040630170000000006000003400208000907001000000',\n    '080000090000410800207000000000000270003209000010046008304000000970000000000601300',\n    '000603005010048003000001006180050067050070000004000080400006000007000000008900001',\n    '500006200000500000020070350300007090651402000000610000017030400900001000000040900',\n    '050000100201000040094060075000009000005018024070000050640000080809050016000000790',\n    '380060000002300005059008000000000000200400950000010684000801000060059000900000300',\n    '090807004500000000074100850000000007007000000800002000940010200000605049080020701',\n    '090000080000000604200406007000000040000000208000970060050000001400098750009204000',\n    '009000074005003900070060000000000090000940031030000000000070408040805067001000000',\n    '006000070000400609070030051000007906000000024000001700020000043650000000390002007',\n    '060905000000006000000080000800070600007039000006100032020000095589700003000000010',\n    '000070009090130067600900001700004200000000104000381000000600080000000940040090702',\n    '590100000000000620001040900000000009000000007046500000024003070650700100017020030',\n    '180720069700060003003800040800200000009034001200600094000940006000080000000000000',\n    '001000000050084000000070000046000507080100400000002068009750080714006090000000000',\n    '000002000900700000000018000180500006650000207007009800506980002040007000700050000',\n    '609000034002000001051002090000309000000010000010465000004120000007603049300000005',\n    '000000000000083000408050001090302000004000030805090000300846000002100500041000096',\n    '010000003730002040009000060000063007000400102090000000640790000000006024000030500',\n    '003800200600000730000000008709403001802709000000000004004100360007900000006000487',\n    '900200840000000002060059070004006503006004000230000000740000000080070000500000900',\n  ],\n  intermediate: [\n    '000000201000090000000007060001009020025070003093020617000008100000050090062000380',\n    '000008200000750000005000309000010900020000005006207001500120008012306000830000000',\n    '023008060000006000000570008040000000000000570800000010036700080072060400001030020',\n    '000781000105094000000500000001002805008000003574003000003007040800300000090010000',\n    '000001000009208400100500000841900500002010009030000000016020000004059200000060034',\n    '003057000270109500100000003002001000300680000000000000007002900809000307060700085',\n    '000020000090000034085009000007002000000080009020043008008090000600274003700600040',\n    '005100900300000001010950603020000087008790306007500010001000000030000000000089000',\n    '090000560061003000000100000059004107000030000038005940000950700780040006000007000',\n    '092008104000002000070000000003001070800900000004580002051290000200000000000107005',\n    '900504000000320001280000060400003000020000006050010809000956003000000400000800050',\n    '617000900000005000000300040005000000204010607000400300000700090176000000032040100',\n    '054900086003067090002300005209700500000003400007009060600000000000005008000070000',\n    '420009003006300021000708000019004870060070042000000090000690000000000260001000000',\n    '000310460000480907040900100130000700080670000400000000500190030609000000010050000',\n    '605000300000310059000090080280009001000004000000031020000000200020608035010020040',\n    '090070020620040700000085000870020900000000000000000005060308004200090057080000600',\n    '170600000600087030000009100009006040000000005080050307000060000038000010010008950',\n    '096002010005700002007009040640005000002001769000000000800000100070000590000040000',\n    '000000080800006107010057060060000050000080400000900000000000210005049006204008000',\n    '012090000000000560608000700005030000003120900000000000000501000850070002709002006',\n    '002480000090000000800590002003006080050020000000000049028001000105034000060000003',\n    '001007900002001030000980002000040000630708000004010708000002060000000800080006301',\n    '040800060100260050906015040000000032300400090000000000080602005010000300605300004',\n    '000900051030050009008601007000000730080100005067000000400800000006000003390500086',\n    '849207003002003000600000080008000040027090000300000001060000124000030000104000009',\n    '920060000007108006840700500000010000000052000002006040209001860000000070700000029',\n    '750040080080160000004009070000600002801000000090000106000000400076002000900080000',\n    '500000600010590000490807500007001009050000030000400700000003000030050476064009000',\n    '000006009000010004000020006050200300032400010480001000100042000000008020004900080',\n  ],\n  hard: [\n    '009300800720800003000007092000002008460090700080000600000004030097003000500000000',\n    '000060000807005060000008950905030000000000079006280300000091003703000800000020500',\n    '000000690000926080700000000000000020001040003000308907800260030003700200004001000',\n    '368000700050007000000301000001002600420000000670835210700000000000200050800070320',\n    '063009000000800030000006040040500007006007400007103056970305800001000900000000000',\n    '010000460000000005409008010038050040006000000000000923100385096300006000000100500',\n    '602070000050102036090060400000010007201900304000000950019000000000300000400000100',\n    '300002750051803000000006100007085010800090000010600009020070000005000000106509020',\n    '000029100800000200006000000200035900501000060000002403100050800600814000040000000',\n    '002080000004050010800100402009200000325010000000400000000506120000900050090000680',\n    '005609030000004000070000640439560010050000000006007000100030260067000450020090000',\n    '008000000900010000020003008100200046030060000006041900040050190050000003010020800',\n    '000000003086000500500060049010000060050040007948000000000500010763090000000400700',\n    '070100560000000801400000000090400000000085009006010700001806050600009078000070300',\n    '060007000050060002000000460420901630300040007010006050000090000100000005000032700',\n    '800100000004203001000054000602981000390540000001000000106002400000400050008030000',\n    '000000802030002090062080014805001000090500030004000000000000900010300060000046001',\n    '090106000700290000500000008800007006060040000001000070000400800040002050200800017',\n    '204000507095000360000000000082090050900874020300500000060020000800907030000000900',\n    '320400001090500470000010900100002006700040302060907050000000000950004000016000000',\n    '000500009708020034004030500005008000090072000000010092207003900500701000041000000',\n    '300800000200007060005400307000048000000560004000000503830004006020680950000000000',\n    '090005200061000700040070058920000000000010040005000807000000000700600502012800000',\n    '070809000000000000600300005050001006009400500100000003400005038701080009300040070',\n    '000070534002000000000000170240000003100380000000006007800002001000054080300001005',\n    '000010000000890260000405900830900000900003014005020090000008000190030000004050600',\n    '004010030000004000000097050509000000030000600700000004080050100090640300060900708',\n    '043080706000000030020000004000090620001860000080003070010000000309010840008000067',\n    '050006000073090060801300050306000080000200307000000000000000520009070608000100030',\n    '200008000000025004000000000340000109790053200000049005010090083007000050008701000',\n  ],\n};\n","import React from 'react';\nimport './style.css';\n\ninterface ModalProps {\n  open: Boolean;\n  children: any;\n}\n\nexport const Modal: React.FC<ModalProps> = ({ open, children }) => {\n  const modalStyles = open ? 'modal' : 'modal modal-hidden';\n  const overlayStyles = open ? 'overlay' : '';\n\n  return (\n    <>\n      <div className={overlayStyles}>\n        <div className={modalStyles}>{children}</div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Modal } from '../Modal';\nimport { Button } from '@material-ui/core';\n\ninterface SolvedProps {\n  open: Boolean;\n  restartGame: Function;\n}\n\nexport const SolvedModal: React.FC<SolvedProps> = ({ open, restartGame }) => {\n  const onRestartPress = () => {\n    restartGame();\n  };\n\n  return (\n    <Modal\n      open={open}\n      children={\n        <>\n          <h3>Great job! You solved the puzzle!</h3>\n          <div>\n            <p>Do you want to play again?</p>\n            <Button variant=\"contained\" onClick={onRestartPress}>\n              Play again\n            </Button>\n          </div>\n        </>\n      }\n    />\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport { Modal } from '../Modal';\nimport {\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Button,\n  Switch,\n} from '@material-ui/core';\n\ninterface ChooseSettingsModalProps {\n  open: Boolean;\n  applySettings: Function;\n}\n\nexport const ChooseSettingsModal: React.FC<ChooseSettingsModalProps> = ({\n  open,\n  applySettings,\n}) => {\n  const [temporaryDifficulty, setTemporaryDifficulty] = useState(\n    'intermediate'\n  );\n  const [temporaryShowMistakes, setTemporaryShowMistakes] = useState(false);\n\n  const handleDifficultyChange = (e: ChangeEvent<HTMLInputElement>) => {\n    open = false;\n    setTemporaryDifficulty(e.target.value);\n  };\n\n  const handleShowMistakesChange = () => {\n    setTemporaryShowMistakes(!temporaryShowMistakes);\n  };\n\n  return (\n    <Modal\n      open={open}\n      children={\n        <>\n          <h3>Choose Settings</h3>\n\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              name=\"difficulty\"\n              value={temporaryDifficulty}\n              onChange={handleDifficultyChange}\n            >\n              <FormControlLabel value=\"easy\" control={<Radio />} label=\"Easy\" />\n              <FormControlLabel\n                value=\"intermediate\"\n                control={<Radio />}\n                label=\"Intermediate\"\n              />\n              <FormControlLabel value=\"hard\" control={<Radio />} label=\"Hard\" />\n            </RadioGroup>\n            <br />\n            <FormControlLabel\n              control={\n                <Switch\n                  size=\"medium\"\n                  checked={temporaryShowMistakes}\n                  onChange={handleShowMistakesChange}\n                />\n              }\n              label=\"Show Mistakes\"\n            />\n            <br />\n          </FormControl>\n          <div>\n            <Button\n              variant=\"contained\"\n              onClick={() =>\n                applySettings(temporaryDifficulty, temporaryShowMistakes)\n              }\n            >\n              Start Game!\n            </Button>\n          </div>\n        </>\n      }\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { SudokuItem } from '../SudokuItem';\nimport { puzzles } from '../Puzzles';\nimport { SolvedModal } from '../SolvedModal';\nimport { ChooseSettingsModal } from '../ChooseSettingsModal';\nimport { Button } from '@material-ui/core';\n\nimport './style.css';\n\nexport const Sudoku: React.FC = () => {\n  const [board, setBoard] = useState<SudokuBoard>([]);\n  const [mistakes, setMistakes] = useState<Mistakes>([]);\n  const [solved, setSolved] = useState<boolean>(false);\n  const [difficulty, setDifficulty] = useState<string>('');\n  const [showMistakes, setShowMistakes] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (difficulty != '') {\n      getBoard();\n    }\n  }, [difficulty]);\n\n  const getBoard = () => {\n    let newBoard: SudokuBoard = [];\n    let newMistakes: Mistakes = [];\n    const puzzle = puzzles[difficulty][Math.floor(Math.random() * 30)];\n\n    for (let i = 0; i < 9; i++) {\n      let row: SudokuRow = [];\n      let mistakesRow: MistakesRow = [];\n      for (let j = 0; j < 9; j++) {\n        const value = parseInt(puzzle[i * 9 + j]);\n        const isPermanent = value !== 0;\n        row.push({ value: value, permanent: isPermanent });\n        mistakesRow.push(false);\n      }\n      newBoard.push(row);\n      newMistakes.push(mistakesRow);\n    }\n\n    setBoard(newBoard);\n    setMistakes(newMistakes);\n  };\n\n  const restartGame = () => {\n    getBoard();\n    setDifficulty('');\n    setSolved(false);\n  };\n\n  const applySettings = (difficulty: string, showMistakes: boolean) => {\n    setDifficulty(difficulty);\n    setShowMistakes(showMistakes);\n  };\n\n  const changeSudokuItem: ChangeItem = (coordinates, newValue) => {\n    const x = coordinates[0];\n    const y = coordinates[1];\n\n    let newBoard: SudokuBoard = [];\n\n    board.forEach((row: SudokuRow) => {\n      return newBoard.push([...row]);\n    });\n\n    newBoard[x][y].value = newValue;\n    setBoard(newBoard);\n\n    checkSudokuForErrors();\n  };\n\n  const checkGroup = (group: CheckGroup, mistakes: TemporaryMistakes) => {\n    let newBoardSolved = true;\n    if (new Set(group.map((i: CheckItem) => i.value)).size !== group.length) {\n      newBoardSolved = false;\n\n      group.forEach((item: CheckItem) => {\n        const elements = group.filter(\n          (i: CheckItem) => i.value === item.value && item.value !== 0\n        );\n        if (elements.length > 1) {\n          elements.forEach((el: CheckItem) => {\n            mistakes.push(el.coordinates);\n          });\n        }\n      });\n    }\n\n    return newBoardSolved;\n  };\n\n  const checkSudokuForErrors = () => {\n    let temporaryMistakes: TemporaryMistakes = [];\n    let newMistakes: Mistakes = [];\n    let allFieldFilled = true;\n\n    // check that Sudoku don't have empty fields and fill array of arrays for mistakes with default values\n    for (let y = 0; y < 9; y++) {\n      let mistakeRow: MistakesRow = [];\n      for (let x = 0; x < 9; x++) {\n        mistakeRow.push(false);\n        if (board[y][x].value === 0) {\n          allFieldFilled = false;\n        }\n      }\n      newMistakes.push(mistakeRow);\n    }\n\n    // check for mistakes in rows and columns\n    for (let y = 0; y < 9; y++) {\n      let row: CheckGroup = [];\n      let column: CheckGroup = [];\n      for (let x = 0; x < 9; x++) {\n        column.push({ value: board[y][x].value, coordinates: [y, x] });\n        row.push({ value: board[y][x].value, coordinates: [y, x] });\n      }\n\n      checkGroup(row, temporaryMistakes);\n      checkGroup(column, temporaryMistakes);\n    }\n\n    // check for mistakes in squares\n    for (let yStart = 0; yStart < 9; yStart += 3) {\n      for (let xStart = 0; xStart < 9; xStart += 3) {\n        let square: CheckGroup = [];\n        for (let y = yStart; y < yStart + 3; y++) {\n          for (let x = xStart; x < xStart + 3; x++) {\n            square.push({ value: board[y][x].value, coordinates: [y, x] });\n          }\n        }\n        checkGroup(square, temporaryMistakes);\n      }\n    }\n\n    // if all fields are filled and no errors were found game is complete\n    setSolved(allFieldFilled && temporaryMistakes.length === 0);\n\n    // covert mistakes to a proper format and put in state\n    temporaryMistakes.forEach((mistake: Coordinates) => {\n      const y = mistake[0];\n      const x = mistake[1];\n      if (!board[y][x].permanent) {\n        newMistakes[y][x] = true;\n      }\n    });\n\n    setMistakes(newMistakes);\n  };\n\n  return difficulty != '' ? (\n    <div className=\"container\">\n      <Button variant=\"contained\" onClick={() => restartGame()}>\n        New Game\n      </Button>\n      <table>\n        <tbody>\n          {board.map((row: SudokuRow, yIndex: number) => (\n            <tr key={yIndex}>\n              {row.map((item: SudokuItemType, xIndex: number) => (\n                <td key={(yIndex + 1) * (xIndex + 1)}>\n                  <SudokuItem\n                    item={item}\n                    changeSudokuItem={changeSudokuItem}\n                    coordinates={[yIndex, xIndex]}\n                    isMistake={showMistakes ? mistakes[yIndex][xIndex] : false}\n                  />\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SolvedModal open={solved} restartGame={restartGame} />\n    </div>\n  ) : (\n    <ChooseSettingsModal open={true} applySettings={applySettings} />\n  );\n};\n","import React from 'react';\nimport { Sudoku } from './Sudoku';\n\nfunction App() {\n  return <Sudoku />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}