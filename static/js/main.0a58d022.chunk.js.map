{"version":3,"sources":["SudokuItem/index.tsx","Puzzles/index.ts","Sudoku/index.tsx","Modal/index.tsx","SolvedModal/index.tsx","ChooseSettingsModal/index.tsx","RestartGameModal/index.tsx","Game/index.tsx","App.tsx","index.tsx"],"names":["SudokuItem","item","changeSudokuItem","coordinates","isMistake","componentStyle","permanent","type","className","value","onChange","e","target","length","newDigitIndex","indexOf","newValue","parseInt","isNaN","disabled","puzzles","easy","medium","hard","Sudoku","difficulty","setSolved","showMistakes","useState","board","setBoard","mistakes","setMistakes","useEffect","getBoard","newBoard","newMistakes","puzzle","Math","floor","random","i","row","mistakesRow","j","isPermanent","push","x","y","forEach","checkSudokuForErrors","checkGroup","group","newBoardSolved","Set","map","size","elements","filter","el","temporaryMistakes","allFieldFilled","mistakeRow","column","yStart","xStart","square","mistake","yIndex","xIndex","Modal","open","children","modalStyles","overlayStyles","SolvedModal","restartGame","Button","variant","onClick","ChooseSettingsModal","applySettings","temporaryDifficulty","setTemporaryDifficulty","temporaryShowMistakes","setTemporaryShowMistakes","FormControl","component","RadioGroup","name","FormControlLabel","control","Radio","label","Switch","checked","RestartGameModal","closeModal","Game","solved","setDifficulty","setShowMistakes","restartModal","setRestartModal","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAWaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,YACAC,EACI,EADJA,UAiBMC,GAFiBJ,EAAKK,UAAY,sBAAwB,QAExB,KADdF,EAAY,eAAiB,IAGvD,OACE,uBACEG,KAAK,OACLC,UAAWH,EACXI,MAAsB,IAAfR,EAAKQ,MAAcR,EAAKQ,MAAQ,GACvCC,SAtBoB,SAACC,GACO,IAA1BA,EAAEC,OAAOH,MAAMI,QACjBX,EAAiBC,EAAa,GAGhC,IAAMW,EAA4D,IAA5CH,EAAEC,OAAOH,MAAMM,QAAQ,GAAKd,EAAKQ,OAAe,EAAI,EACpEO,EAAWC,SAASN,EAAEC,OAAOH,MAAMK,IAEpCI,MAAMF,IACTd,EAAiBC,EAAaa,IAc9BG,SAAUlB,EAAKK,aCxCRc,EAAmB,CAC9BC,KAAM,CACJ,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,qFAEFC,OAAQ,CACN,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,qFAEFC,KAAM,CACJ,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,oFACA,sFCnFSC,G,MAAgC,SAAC,GAIvC,IAHLC,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,aACI,EACsBC,mBAAsB,IAD5C,mBACGC,EADH,KACUC,EADV,OAE4BF,mBAAmB,IAF/C,mBAEGG,EAFH,KAEa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","file":"static/js/main.0a58d022.chunk.js","sourcesContent":["import React, { ChangeEvent, FocusEvent } from 'react';\n\nimport './style.css';\n\ninterface SudokuItemProps {\n  item: SudokuItemType;\n  changeSudokuItem: ChangeItem;\n  coordinates: Coordinates;\n  isMistake: boolean;\n}\n\nexport const SudokuItem: React.FC<SudokuItemProps> = ({\n  item,\n  changeSudokuItem,\n  coordinates,\n  isMistake,\n}) => {\n  const changeItemValue = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.length === 0) {\n      changeSudokuItem(coordinates, 0);\n    }\n\n    const newDigitIndex = e.target.value.indexOf('' + item.value) === 0 ? 1 : 0;\n    const newValue = parseInt(e.target.value[newDigitIndex]);\n\n    if (!isNaN(newValue)) {\n      changeSudokuItem(coordinates, newValue);\n    }\n  };\n\n  const mainInputStyle = item.permanent ? 'item item-permanent' : 'item';\n  const mistakeInputStyle = isMistake ? 'item-mistake' : '';\n  const componentStyle = mainInputStyle + ' ' + mistakeInputStyle;\n\n  return (\n    <input\n      type=\"text\"\n      className={componentStyle}\n      value={item.value !== 0 ? item.value : ''}\n      onChange={changeItemValue}\n      disabled={item.permanent}\n    />\n  );\n};\n","export const puzzles: Puzzles = {\n  easy: [\n    '089564203400030079123800040530089460042305090908026300004078005800003104360102087',\n    '708062105300090040062351070809500301540013980013800604035020008080600412120987003',\n    '003401078978006042042789603807640030230900504500310890310097000000064305426003080',\n    '004009320201506907007210650050080412978104000042035790300062879000790035780350006',\n    '400970536080053400500142009000231970908504310310090045053780200807006053260010807',\n    '300790050008400021640002907506240708021079060780050412000513870897020105053907006',\n    '005807046789200030420050870097040320231900000500310987603021700970006412040780063',\n    '978000065053000014042536800030045780500978000897310456406097501780000002000264970',\n    '009054230123900500456320000640035089031070420970246300365000908014008050800560042',\n    '320890460000231708980004030060042809098653041402008006046300980005709024809000513',\n    '907004000321087060050301008412098050503012870790503041000079004046030980870240513',\n    '240000531879350002005462008980213400321006780004879120012000090503080010008104065',\n    '080005320054130980001098054700300400410870063060241000246500879030080246870620035',\n    '908400305100003007053790204026870530080005602310006008007321456031650780064900023',\n    '002046090000879102078203460536000040400630879780100300060798003153462000807350620',\n    '213060000009100540006708003462080051350624708700013002600009124087201600020356987',\n    '605870030002546007908203064890300006260708305150060709000087140009024053021635900',\n    '004130980200708650897000020400510870080624105300080046002079063053241008978006402',\n    '456021908080654010020080045000105090908040153530079204200098530300410089807003421',\n    '090650120004908630365140007023007506456001809709004013501780000000310790970006351',\n    '000530402642908350030602798204000987305807020807010005023056879780100506456080003',\n    '002506709645800020908010050400635097089100060036087214204708501090001600150402078',\n    '046203080879040300200870650007635410630004708024980003090000135051008206402051079',\n    '987530002100700563635001000002103870351000240790064005870040320010978004540300987',\n    '789040030103078065006312098078260510001007604640003087014780056000530241360400000',\n    '009200465213506790506079102351400087700001624402008503005900241980000000004630079',\n    '030060980246790000079001604604800102907213405300500700003007241412635000090104356',\n    '004700105980351046510400809201030708800120560350087010065009001790200654032006907',\n    '700053240020897105305200800140030708053709012970020503001605987004978000897000650',\n    '097500020004231780000097450406310908780020531310709000653102800102970065070600210',\n  ],\n  medium: [\n    '087500100124008003000402970002000789700046300050879020546320000213080064800650031',\n    '630007020007124000000035900870000506010040070006870003002090350708001002350400708',\n    '605000008020080503900536400070645020203000054040012080050807206790200100402100870',\n    '000315400206700015035000080098040650000008140410003900650000201007231004301500097',\n    '402560000003708210708000365006070501879000602030246008020600780087301000050907123',\n    '090103060405700201030056097980031400503002709020970015809210003240300970300007142',\n    '009000653201605000056980040000708005013060009980001406700203500002040890460000230',\n    '000900024000620500602013000005200800014070300807006001080065032023008460400100090',\n    '004897000807000600100200908030009204780001060401530800045970023000040089070302050',\n    '090402030065098000204000700000021005450080302023600078000009153078105200500240097',\n    '006124000001000503079000402020300879500708040907000100400010987090046021132870000',\n    '000531070870600030105000640098305004000800365503010090007056103021009006600020709',\n    '090000013132000046460032800000056004000241007201870600087620300003980060024500790',\n    '000087130123600008700300405600879000078030024001046907365700001800410350010563070',\n    '002908500098000410060142090000080006000026035246005800087560000300800050604030907',\n    '600000879510000046087246030041708500800503400056402790060020000700050301102087050',\n    '104780000605000900000036102000012807809000230010078060460103000050807026090200315',\n    '062090003000460980790001004000600870080000056630987000506070002013006708009203460',\n    '004000890907400230001708500012079003060201078090306042200010709135080020870620300',\n    '602000003008351004500000897003540900006809310780003600210005080090124000060080420',\n    '002605700503907000008004063300546007054000320987010004870000240040790105000060800',\n    '000062870980000200624008000009000063300987410200630708130500087065879000008010654',\n    '000001089800000400200709500000153090000000264087200050700605302032008000465010000',\n    '700350021530241000401070036807000103060500890050980064045032900908405012310008640',\n    '078004000040301900002980605204135000100800264890200053036012080709063020020000530',\n    '001050789070201000306070400060798002090000045100000070900513000604000100003004800',\n    '103800050009040300000210980000798000642001000070000135000005012014007000060120708',\n    '002098030900503020600002709897600300000321008030900645005070064420005800089040103',\n    '070060015100700426046051000001009564987000201050213090000124908708600100402900650',\n    '503098000000063087098010030040809301005000708070130402900301540604900010321004800',\n  ],\n  hard: [\n    '600009000070300206501020070450000300000231000020500900005070012807102060204000098',\n    '090000000065000870000007546070650020200970005306100007900420300513000400000010798',\n    '000102506302400070600008013090510062050004008260900350001050980006000100709240000',\n    '008500402030604008642080000000041035200056000360009020000000879700132000456700200',\n    '001560000780000600030008000264000000000105020003240080005907001000650890978020000',\n    '035004000070053200200097100708021000000700002402030098080000654054978000001600900',\n    '097050000000098300100000700000003046302006070045800010000980000080120005420000907',\n    '004030780090120000005080001080003600000070302120006008501400890978001060000708150',\n    '200064090000097100009001065000700013000406000098000000020050800630970200087000306',\n    '040900000000102780978000020007064300504030900200090045006005807080400153310089000',\n    '420090000000260870780050206000900320007300004001045000000001560053709010000006798',\n    '005080004900020030100006087013640800540900200070300506000097000001200090000100460',\n    '010045900000000312970010000053200007000897100007000064709000036500089400420500080',\n    '001050870350000041009142000010400087087015000600080503790000405065807000002004790',\n    '004089000005001000000500412460100009000890206090000035213000650000310080800040000',\n    '530700600000000908078002000700046020123009050000013089005120807204000005000630014',\n    '900000045012000070600907000003046800200009053090000200001063700506000020080410006',\n    '807420000004000790053780000400078635530102080709050020070564203045230009010007506',\n    '530709100709001600400030078070300004000000201302645000004090005000153020053000789',\n    '050000708000900400987600000005007000206050080000064513000021070798000001010780350',\n    '000000089000907000907024005000056042041870600350000900060132000000000564700000000',\n    '000100360240600000000070000008201000000504709065000023000089500510420070907000640',\n    '003000504050000890709600000031090006970064010000050089200709050060001978800506100',\n    '000789005700010206350020070013000980009200050000807000004603700980042000035000412',\n    '056008001080002000000040890000800005970100006001264000010036008007000650300089040',\n    '000000087005008120097002030900310400000420708602000051089000006123504800000807210',\n    '008060012000010798402890000870602000200000070030908006301080600087406320050003907',\n    '506100000870006020000789000002031070790040000050008642120090005007300210605004097',\n    '105400079000000006000780100700000063002050790563078000020004907054800320980201000',\n    '007400006100030009000700200013005000046908100000012005798000020000890510000204907',\n  ],\n};\n","import React, { useEffect, useState } from 'react';\nimport { SudokuItem } from '../SudokuItem';\nimport { puzzles } from '../Puzzles';\n\nimport './style.css';\n\ninterface SudokuProps {\n  difficulty: string;\n  setSolved: Function;\n  showMistakes: boolean;\n}\n\nexport const Sudoku: React.FC<SudokuProps> = ({\n  difficulty,\n  setSolved,\n  showMistakes,\n}) => {\n  const [board, setBoard] = useState<SudokuBoard>([]);\n  const [mistakes, setMistakes] = useState<Mistakes>([]);\n\n  useEffect(() => {\n    if (difficulty != '') {\n      getBoard();\n    }\n  }, [difficulty]);\n\n  const getBoard = () => {\n    let newBoard: SudokuBoard = [];\n    let newMistakes: Mistakes = [];\n    const puzzle = puzzles[difficulty][Math.floor(Math.random() * 30)];\n\n    for (let i = 0; i < 9; i++) {\n      let row: SudokuRow = [];\n      let mistakesRow: MistakesRow = [];\n      for (let j = 0; j < 9; j++) {\n        const value = parseInt(puzzle[i * 9 + j]);\n        const isPermanent = value !== 0;\n        row.push({ value: value, permanent: isPermanent });\n        mistakesRow.push(false);\n      }\n      newBoard.push(row);\n      newMistakes.push(mistakesRow);\n    }\n\n    setBoard(newBoard);\n    setMistakes(newMistakes);\n  };\n\n  const changeSudokuItem: ChangeItem = (coordinates, newValue) => {\n    const x = coordinates[0];\n    const y = coordinates[1];\n\n    let newBoard: SudokuBoard = [];\n\n    board.forEach((row: SudokuRow) => {\n      return newBoard.push([...row]);\n    });\n\n    newBoard[x][y].value = newValue;\n    setBoard(newBoard);\n\n    checkSudokuForErrors();\n  };\n\n  const checkGroup = (group: CheckGroup, mistakes: TemporaryMistakes) => {\n    let newBoardSolved = true;\n    if (new Set(group.map((i: CheckItem) => i.value)).size !== group.length) {\n      newBoardSolved = false;\n\n      group.forEach((item: CheckItem) => {\n        const elements = group.filter(\n          (i: CheckItem) => i.value === item.value && item.value !== 0\n        );\n        if (elements.length > 1) {\n          elements.forEach((el: CheckItem) => {\n            mistakes.push(el.coordinates);\n          });\n        }\n      });\n    }\n\n    return newBoardSolved;\n  };\n\n  const checkSudokuForErrors = () => {\n    let temporaryMistakes: TemporaryMistakes = [];\n    let newMistakes: Mistakes = [];\n    let allFieldFilled = true;\n\n    // check that Sudoku don't have empty fields and fill array of arrays for mistakes with default values\n    for (let y = 0; y < 9; y++) {\n      let mistakeRow: MistakesRow = [];\n      for (let x = 0; x < 9; x++) {\n        mistakeRow.push(false);\n        if (board[y][x].value === 0) {\n          allFieldFilled = false;\n        }\n      }\n      newMistakes.push(mistakeRow);\n    }\n\n    // check for mistakes in rows and columns\n    for (let y = 0; y < 9; y++) {\n      let row: CheckGroup = [];\n      let column: CheckGroup = [];\n      for (let x = 0; x < 9; x++) {\n        column.push({ value: board[y][x].value, coordinates: [y, x] });\n        row.push({ value: board[x][y].value, coordinates: [x, y] });\n      }\n\n      checkGroup(row, temporaryMistakes);\n      checkGroup(column, temporaryMistakes);\n    }\n\n    // check for mistakes in squares\n    for (let yStart = 0; yStart < 9; yStart += 3) {\n      for (let xStart = 0; xStart < 9; xStart += 3) {\n        let square: CheckGroup = [];\n        for (let y = yStart; y < yStart + 3; y++) {\n          for (let x = xStart; x < xStart + 3; x++) {\n            square.push({ value: board[y][x].value, coordinates: [y, x] });\n          }\n        }\n        checkGroup(square, temporaryMistakes);\n      }\n    }\n\n    // if all fields are filled and no errors were found game is complete\n    setSolved(allFieldFilled && temporaryMistakes.length === 0);\n\n    // covert mistakes to a proper format and put in state\n    temporaryMistakes.forEach((mistake: Coordinates) => {\n      const y = mistake[0];\n      const x = mistake[1];\n      if (!board[y][x].permanent) {\n        newMistakes[y][x] = true;\n      }\n    });\n\n    setMistakes(newMistakes);\n  };\n\n  return (\n    <table>\n      <tbody>\n        {board.map((row: SudokuRow, yIndex: number) => (\n          <tr key={yIndex}>\n            {row.map((item: SudokuItemType, xIndex: number) => (\n              <td key={(yIndex + 1) * (xIndex + 1)}>\n                <SudokuItem\n                  item={item}\n                  changeSudokuItem={changeSudokuItem}\n                  coordinates={[yIndex, xIndex]}\n                  isMistake={showMistakes ? mistakes[yIndex][xIndex] : false}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './style.css';\n\ninterface ModalProps {\n  open: Boolean;\n  children: any;\n}\n\nexport const Modal: React.FC<ModalProps> = ({ open, children }) => {\n  const modalStyles = open ? 'modal' : 'modal modal-hidden';\n  const overlayStyles = open ? 'overlay' : '';\n\n  return (\n    <>\n      <div className={overlayStyles}>\n        <div className={modalStyles}>{children}</div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Modal } from '../Modal';\nimport { Button } from '@material-ui/core';\n\ninterface SolvedProps {\n  open: Boolean;\n  restartGame: Function;\n}\n\nexport const SolvedModal: React.FC<SolvedProps> = ({ open, restartGame }) => {\n  const onRestartPress = () => {\n    restartGame();\n  };\n\n  return (\n    <Modal\n      open={open}\n      children={\n        <>\n          <h3>Great job! You solved the puzzle!</h3>\n          <div>\n            <p>Do you want to play again?</p>\n            <Button variant=\"contained\" onClick={onRestartPress}>\n              Play again\n            </Button>\n          </div>\n        </>\n      }\n    />\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport { Modal } from '../Modal';\nimport {\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Button,\n  Switch,\n} from '@material-ui/core';\n\ninterface ChooseSettingsModalProps {\n  open: Boolean;\n  applySettings: Function;\n}\n\nexport const ChooseSettingsModal: React.FC<ChooseSettingsModalProps> = ({\n  open,\n  applySettings,\n}) => {\n  const [temporaryDifficulty, setTemporaryDifficulty] = useState('easy');\n  const [temporaryShowMistakes, setTemporaryShowMistakes] = useState(true);\n\n  const handleDifficultyChange = (e: ChangeEvent<HTMLInputElement>) => {\n    open = false;\n    setTemporaryDifficulty(e.target.value);\n  };\n\n  const handleShowMistakesChange = () => {\n    setTemporaryShowMistakes(!temporaryShowMistakes);\n  };\n\n  return (\n    <Modal\n      open={open}\n      children={\n        <>\n          <h3>Choose Settings</h3>\n\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              name=\"difficulty\"\n              value={temporaryDifficulty}\n              onChange={handleDifficultyChange}\n            >\n              <FormControlLabel value=\"easy\" control={<Radio />} label=\"Easy\" />\n              <FormControlLabel\n                value=\"medium\"\n                control={<Radio />}\n                label=\"Medium\"\n              />\n              <FormControlLabel value=\"hard\" control={<Radio />} label=\"Hard\" />\n            </RadioGroup>\n            <br />\n            <FormControlLabel\n              control={\n                <Switch\n                  size=\"medium\"\n                  checked={temporaryShowMistakes}\n                  onChange={handleShowMistakesChange}\n                />\n              }\n              label=\"Show Mistakes\"\n            />\n            <br />\n          </FormControl>\n          <div>\n            <Button\n              variant=\"contained\"\n              onClick={() =>\n                applySettings(temporaryDifficulty, temporaryShowMistakes)\n              }\n            >\n              Start Game!\n            </Button>\n          </div>\n        </>\n      }\n    />\n  );\n};\n","import React from 'react';\nimport { Modal } from '../Modal';\n\nimport { Button } from '@material-ui/core';\nimport './style.css';\n\ninterface RestartGameModalProps {\n  open: Boolean;\n  closeModal: Function;\n  restartGame: Function;\n}\n\nexport const RestartGameModal: React.FC<RestartGameModalProps> = ({\n  open,\n  closeModal,\n  restartGame,\n}) => {\n  const onRestartPress = () => {\n    restartGame();\n  };\n\n  const onCancelPress = () => {\n    closeModal();\n  };\n\n  return (\n    <Modal\n      open={open}\n      children={\n        <>\n          <h3>Are you sure?</h3>\n          <p>Current game progress will be erased</p>\n          <div className=\"modal-buttons\">\n            <Button variant=\"contained\" onClick={onCancelPress}>\n              Cancel\n            </Button>\n            <Button variant=\"contained\" onClick={onRestartPress}>\n              Start New Game\n            </Button>\n          </div>\n        </>\n      }\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { Sudoku } from '../Sudoku';\nimport { SolvedModal } from '../SolvedModal';\nimport { ChooseSettingsModal } from '../ChooseSettingsModal';\nimport { RestartGameModal } from '../RestartGameModal';\n\nimport { Button } from '@material-ui/core';\nimport './style.css';\n\nexport const Game: React.FC = () => {\n  const [solved, setSolved] = useState<boolean>(false);\n  const [difficulty, setDifficulty] = useState<string>('');\n  const [showMistakes, setShowMistakes] = useState<boolean>(true);\n  const [restartModal, setRestartModal] = useState<boolean>(false);\n\n  const restartGame = () => {\n    setDifficulty('');\n    setSolved(false);\n    setRestartModal(false);\n  };\n\n  const applySettings = (difficulty: string, showMistakes: boolean) => {\n    setDifficulty(difficulty);\n    setShowMistakes(showMistakes);\n  };\n\n  const openRestartModal = () => {\n    setRestartModal(true);\n  };\n\n  const closeRestartModal = () => {\n    setRestartModal(false);\n  };\n\n  return difficulty != '' ? (\n    <div className=\"container\">\n      <Button variant=\"contained\" onClick={openRestartModal}>\n        New Game\n      </Button>\n      <Sudoku\n        showMistakes={showMistakes}\n        setSolved={setSolved}\n        difficulty={difficulty}\n      />\n      <SolvedModal open={solved} restartGame={restartGame} />\n      <RestartGameModal\n        open={restartModal}\n        closeModal={closeRestartModal}\n        restartGame={restartGame}\n      />\n    </div>\n  ) : (\n    <ChooseSettingsModal open={true} applySettings={applySettings} />\n  );\n};\n","import React from 'react';\nimport { Game } from './Game';\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}